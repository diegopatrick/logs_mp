version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: logs-api
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .:/var/www
      - ./docker/php/custom.ini:/usr/local/etc/php/conf.d/custom.ini
    networks:
      - logs-network

  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    container_name: logs-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-8080}:80"
    volumes:
      - .:/var/www
      - ./docker/nginx/app.conf:/etc/nginx/conf.d/default.conf
    networks:
      - logs-network
    depends_on:
      - app

  mongodb:
    image: mongo:latest
    container_name: logs-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_USERNAME:-root}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_PASSWORD:-secret}"
    ports:
      - "${MONGO_PORT:-27017}:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - logs-network

  redis:
    image: redis:alpine
    container_name: logs-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - logs-network

  queue:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: logs-queue
    restart: unless-stopped
    command: php artisan queue:work
    volumes:
      - .:/var/www
    depends_on:
      - app
      - redis
    networks:
      - logs-network

networks:
  logs-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data: 